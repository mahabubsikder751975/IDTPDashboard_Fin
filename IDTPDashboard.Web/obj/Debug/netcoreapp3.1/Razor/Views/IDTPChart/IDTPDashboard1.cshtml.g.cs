#pragma checksum "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fd8ecd03bdb72147e3a444faa1fac4177a10f42b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_IDTPChart_IDTPDashboard1), @"mvc.1.0.view", @"/Views/IDTPChart/IDTPDashboard1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\_ViewImports.cshtml"
using IDTPDashboard.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\_ViewImports.cshtml"
using IDTPDashboard.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
using ChartJSCore.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fd8ecd03bdb72147e3a444faa1fac4177a10f42b", @"/Views/IDTPChart/IDTPDashboard1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0c7fdc47333b1198e8e179737775b19b20ff7a83", @"/Views/_ViewImports.cshtml")]
    public class Views_IDTPChart_IDTPDashboard1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
  
        ViewData["Title"] = "IDTP Dashboard";
        Layout = "~/Views/Shared/Site/_Layout.cshtml";
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
  

//Chart foreignTourCategoryWisePieChart = (Chart)ViewData["foreignTourCategoryWisePieChart"];
//Chart foreignTourPurposeWiseOfficialPieChart = (Chart)ViewData["foreignTourPurposeWiseOfficialPieChart"];
//Chart foreignTourPurposeWisePersonalPieChart = (Chart)ViewData["foreignTourPurposeWisePersonalPieChart"];    
//Chart EmployeebyCategory = (Chart)ViewData["EmployeebyCategory"];
//Chart MaleFemaleRatioBoth = (Chart)ViewData["MaleFemaleRatioBoth"];
//Chart MaleFemaleRatioOfficer = (Chart)ViewData["MaleFemaleRatioOfficer"];
//Chart MaleFemaleRatioStaff = (Chart)ViewData["MaleFemaleRatioStaff"];


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<br />\r\n<h4 style=\"text-align:center\">IDTP Dashboard</h4>\r\n<h6 style=\"color: #00008B; text-align: center\">Total Number of Users: ");
#nullable restore
#line 21 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                                                 Write(ViewBag.totalemployee);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h6>\r\n<div class=\"row p-4\">\r\n");
            WriteLiteral(@"    <div class=""col-md-6 p-1"">
        <div class=""card h-100"">
            <div class=""card-body"">                
                <div class=""row"">
                    <div class=""col-md-8"">
                        <h5 id=""G1ChartTitle"" class=""card-title"">Transactions Count (Today) by FI</h5>
                    </div>
                    <div class=""col-md-4"">                        
                        <button id=""btnBack"" type=""button"" style=""display: none;"" class=""btn btn-primary float-right btn-sm"" onclick=""graphOneNavigation()"">
                            <i class=""fa fa-arrow-left""></i>
                        </button>
                    </div>
                </div>
                <canvas id=""totalEmpUtilityWise""></canvas>               
            </div>
        </div>
    </div>
");
            WriteLiteral(@"    <div class=""col-md-6 p-1"">
        <div class=""card h-100"" >
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-10"">
                        <h5 id=""G2ChartTitle"" class=""card-title"">Transactions Amount (Today) by FI</h5>
                    </div>
                    <div class=""col-md-2"">
                        <!-- Button to Open the Modal -->
                        <button id=""btnBack2"" type=""button"" style=""display:none;"" class=""btn btn-primary float-right btn-sm"" onclick=""graphTwoNavigation()"">
                            <i class=""fas fa-arrow-left""></i>
                        </button>
                    </div>
                </div>

                <canvas id=""foreignTourOrganizationWise""></canvas>
                
            </div>
        </div>
    </div> 
");
            WriteLiteral(@"    <div class=""col-md-6 p-1"">
        <div class=""card h-100"">
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-8"">
                        <h5 id=""G3ChartTitle"" class=""card-title"">Total Registered Users by FI</h5>
                    </div>
                    <div class=""col-md-4"">
                        <button id=""btnBack3"" type=""button"" style=""display: none;"" class=""btn btn-primary float-right btn-sm"" onclick=""loadMain3()"">
                            <i class=""fa fa-arrow-left""></i>
                        </button>
                    </div>
                </div>
                <canvas id=""upcommingRetirement""></canvas>
                
            </div>
        </div>
    </div>
");
            WriteLiteral(@"    <div class=""col-md-6 p-1"">
        <div class=""card h-100"">
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-8"">
                        <h5 id=""G4ChartTitle"" class=""card-title"">Current Net Debit Cap/Position by FI</h5>
                    </div>
                    <div class=""col-md-4"">
                        <!-- Button to Open the Modal -->
                        <button id=""btnBack4"" type=""button"" style=""display: none;"" class=""btn btn-primary float-right btn-sm"" onclick=""loadMain4()"">
                            <i class=""fa fa-arrow-left""></i>
                        </button>
                    </div>
                </div>
                <canvas id=""retirementvsNewEmployee""></canvas>
                <div id=""G4L3DesigWiseEmployeeCountForRetirementVsNew"" style=""display:none;"">
                    <table id=""tblG4L3DesigWiseEmployeeCountForRetirementVsNew"" class=""table table-condensed table-striped table-bordered table-h");
            WriteLiteral(@"over table-sm dt-nowrap"">
                        <thead>
                            <tr class=""table-active"">
                                <th scope=""col"">Designation</th>
                                <th scope=""col"">Number of Employee</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div id=""G4L4EmployeeList"" style=""display:none;"">
                    <table id=""tblG4L4EmployeeList"" class=""table table-condensed table-striped table-bordered table-hover table-sm dt-nowrap"">
                        <thead>
                            <tr class=""table-active"">
                                <th scope=""col"">Name</th>
                                <th scope=""col"">Office</th>
                                <th scope=""col"">First Joining Date</th>                                
                            </tr>
                     ");
            WriteLiteral("   </thead>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            WriteLiteral(@"    <div class=""col-md-6 p-1"">
        <div class=""card h-100"">
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-8"">
                        <h5 id=""G5ChartTitle"" class=""card-title"">RTP Status by FI</h5>
                    </div>
                    <div class=""col-md-4"">                        
                        <button id=""btnBack5"" type=""button"" style=""display: none;"" class=""btn btn-primary float-right btn-sm"" onclick=""loadMain5()"">
                            <i class=""fa fa-arrow-left""></i>
                        </button>
                    </div>
                </div>
                <canvas id=""filledPostVacantPosts""></canvas>
                <div id=""G5L3EmployeeListByForeignTourPurpose"" style=""display:none;"">
                    <table id=""tblG5L3EmployeeListByForeignTourPurpose"" class=""table table-condensed table-striped table-bordered table-hover table-sm dt-nowrap"">
                        <thead>
             ");
            WriteLiteral(@"               <tr class=""table-active"">
                                <th scope=""col"">Employee Name</th>
                                <th scope=""col"">From Date</th>
                                <th scope=""col"">To Date</th>
                                <th scope=""col"">Country Visited</th>
                                <th scope=""col"">GO</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
");
            WriteLiteral(@"    <div class=""col-md-6 p-1"">
        <div class=""card h-100"">
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-8"">
                        <h5 id=""G6ChartTitle"" class=""card-title"">Transaction Amount by Settlement Cycle</h5>
                    </div>
                    <div class=""col-md-4"">
                        <!-- Button to Open the Modal -->
                        <button id=""btnBack6"" type=""button"" style=""display: none;"" class=""btn btn-primary float-right btn-sm"" onclick=""loadMain6()"">
                            <i class=""fa fa-arrow-left""></i>
                        </button>
                    </div>
                </div>
                <canvas id=""netSalaryByMonth""></canvas>
                <div id=""G6L3MonthlySalarySummary"" style=""display:none;"">
                    <canvas id=""monthlySalarySummary""></canvas>
                </div>
                <div id=""G6L4GradeWiseMonthlySalarySummary"" style=""display:none;""");
            WriteLiteral(@">
                    <table id=""tblG6L4GradeWiseMonthlySalarySummary"" class=""table table-condensed table-striped table-bordered table-hover table-sm dt-nowrap"">
                        <thead>
                            <tr class=""table-active"">
                                <th scope=""col"">Grade</th>
                                <th scope=""col"">Amount</th>                                
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>
    </div>
");
            WriteLiteral(@"    <div class=""col-md-6 p-1"">
        <div class=""card h-100"">
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-8"">
                        <h5 id=""G7ChartTitle"" class=""card-title"">Current Transactions Settled vs Unsettled</h5>
                    </div>
                    <div class=""col-md-4"">
                        <!-- Button to Open the Modal -->
                        <button id=""btnBack7"" type=""button"" style=""display: none;"" class=""btn btn-primary float-right btn-sm"" onclick=""loadMain7()"">
                            <i class=""fa fa-arrow-left""></i>
                        </button>
                    </div>
                </div>
                <canvas id=""employeeJobStatusPieChart""></canvas>
                <div id=""G7L3DesignationWiseEmployeeCount"" style=""display:none;"">
                    <table id=""tblG7L3DesignationWiseEmployeeCount"" class=""table table-condensed table-striped table-bordered table-hover table-sm dt-");
            WriteLiteral(@"nowrap"">
                        <thead>
                            <tr class=""table-active"">
                                <th scope=""col"">Designation</th>
                                <th scope=""col"">Number of Employee</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div id=""G7L4EmployeeList"" style=""display:none;"">
                    <table id=""tblG7L4EmployeeList"" class=""table table-condensed table-striped table-bordered table-hover table-sm dt-nowrap"">
                        <thead>
                            <tr class=""table-active"">
                                <th scope=""col"">Name</th>
                                <th scope=""col"">Office</th>
                                <th scope=""col"">First Joining Date</th>
                                <th scope=""col"">Service Length</th>
                            </tr>
 ");
            WriteLiteral(@"                       </thead>
                    </table>

                </div>
            </div>
        </div>
    </div>
    <div class=""col-md-6 p-1"">
        <div class=""card h-100"">
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-8"">
                        <h5 id=""G8ChartTitle"" class=""card-title"">Transaction Count by Type</h5>
                    </div>
                    <div class=""col-md-4"">
                        <!-- Button to Open the Modal -->
                        <button id=""btnBack8"" type=""button"" style=""display: none;"" class=""btn btn-primary float-right btn-sm"" onclick=""loadMain8()"">
                            <i class=""fa fa-arrow-left""></i>
                        </button>
                    </div>
                </div>
                <canvas id=""employeeQualifcationPieChart""></canvas>
                <div id=""G8L3DesignationWiseEmployeeCount"" style=""display:none;"">
                    <table");
            WriteLiteral(@" id=""tblG8L3DesignationWiseEmployeeCount"" class=""table table-condensed table-striped table-bordered table-hover table-sm dt-nowrap"">
                        <thead>
                            <tr class=""table-active"">
                                <th scope=""col"">Designation</th>
                                <th scope=""col"">Number of Employee</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

 
");
            WriteLiteral("</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <script type=\"text/javascript\">       \r\n");
                WriteLiteral(@"        
    </script>

    <script type=""text/javascript"">
        var chart1;
        var orgName;
        var postType;

        //Load Document
        $(document).ready(function () {
            //Total employee of Bangladesh Bank
            //Graph 01 level 01 data loading
            loadTotalEmpUtilityWiseChart();           
            
        });
                
        function graphOneNavigation() {            
            if ($('#G1L4EmployeeList').is("":visible"")) {                
                $('#G1L3DesignationWiseEmployeeCount').show();
                $('#G1L4EmployeeList').hide();
                $('#G1ChartTitle').text(chartHelper.getChartTitle('G1L3ChartTitle'));
            }
            else if ($('#G1L3DesignationWiseEmployeeCount').is("":visible"")) {                
                $('#totalEmpUtilityWise').show();
                $('#G1L3DesignationWiseEmployeeCount').hide();
                $('#G1ChartTitle').text(chartHelper.getChartTitle('G1L2ChartTit");
                WriteLiteral(@"le'));
            }
            else if ($('#totalEmpUtilityWise').is("":visible"")) {                
                $('#btnBack').hide();
                chart1.destroy();                
                loadTotalEmpUtilityWiseChart();
            }            
        }
        
        function loadTotalEmpUtilityWiseChart() {
            chartHelper.setChartTitle('G1L1ChartTitle', 'Transactions Count (Today) by FI');
            $('#G1ChartTitle').text(chartHelper.getChartTitle('G1L1ChartTitle'));

            var totalEmpUtilityWise =");
#nullable restore
#line 371 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                Write(Html.Raw(Json.Serialize(@ViewBag.totalEmpUtilityWise)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            var canvas = document.getElementById(""totalEmpUtilityWise"");
            var ctx = canvas.getContext(""2d"");
            var xValues = totalEmpUtilityWise.map(o => o.organization);
            var yValues = totalEmpUtilityWise.map(v => v.totalemployee);
            //var barColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Transaction Count',
                backgroundColor: '#01B8AA',
                data: yValues
            };

            var chartData = chartHelper.data(xValues, dataSet);
            chart1 = new Chart(ctx, chartHelper.config('bar',chartData));
");
                WriteLiteral("        }\r\n        //Graph 01 level 02 data pulling\r\n        function OrgOfficerStaffWiseEmpChart(org) {  \r\n            fetch(\'");
#nullable restore
#line 402 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+'PowerDivChart/GetOrgWiseOfficerStaffEmpData?org=' + org)
                .then(response => response.json())
                .then(data => loadOrgOfficerStaffWiseEmpChart(data,org))
                .catch(error => console.error('Unable to get items.', error));
        }
        //Graph 01 level 02 data loading
        function loadOrgOfficerStaffWiseEmpChart(orgOfficerStaffWiseEmpData, org) {
            orgName = org;
            $('#btnBack').show();
            chartHelper.setChartTitle('G1L2ChartTitle', org + ' - Employee Count');
            $('#G1ChartTitle').text(chartHelper.getChartTitle('G1L2ChartTitle'));

            //console.log(orgOfficerStaffWiseEmpData);
            var canvas = document.getElementById(""totalEmpUtilityWise"");
            var ctx = canvas.getContext(""2d"");
            var xValues = orgOfficerStaffWiseEmpData.map(o => o.postType);
            var yValues = orgOfficerStaffWiseEmpData.map(v => v.filledPost);
            var dsColors = [""#01B8AA"", ""#DD780A"", ""#69");
                WriteLiteral(@"8B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Employee Count',
                backgroundColor: dsColors,
                data: yValues
            };

            var chartData = chartHelper.data(xValues, dataSet);
            chart1 = new Chart(ctx, chartHelper.config('doughnut', chartData));
");
                WriteLiteral(@"        }
        
        ////Graph 01 level 03 data pulling
        function GetDesignationWiseEmpCount(organization, postType) {            
            chartHelper.setChartTitle('G1L3ChartTitle', organization + ' - Designation Summary');
            $('#G1ChartTitle').text(chartHelper.getChartTitle('G1L3ChartTitle'));
            var table = $(""#tblEmployee"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [6, 7],
                bInfo: false,
                ajax: {
                    url: '");
#nullable restore
#line 461 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                     Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+""PowerDivChart/GetDesignationWiseEmpCount"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { org: organization, postType: postType },
                },
                columns: [
                    {
                        data: ""designation"", name: ""Designation"", autoWidth: true, render: function (data,type,row) {
                            return '<a href=""#"" onclick=""javascript:level4EmployeeList(\'' + row['organization'] + '\',\'' + row['designation'] + '\'); return false;"">' + data + '</a>';
                        }
                    },
                    {
                        data: ""empQuantity"",
                        render: function (data, type, row) {
                            return '<a href=""#"" onclick=""javascript:level4EmployeeList(\'' + row['organization'] + '\',\'' + row['designation'] +'\'); return false;"">'+data+'</a>';
                        }
                    }
                ]
            });

    ");
                WriteLiteral(@"    }

        //Graph 01 level 04 data loading
        function level4EmployeeList(org, designation) {
            chartHelper.setChartTitle('G1L4ChartTitle', designation + '- Employee List');
            $('#G1ChartTitle').text(chartHelper.getChartTitle('G1L4ChartTitle'));            
            $('#G1L3DesignationWiseEmployeeCount').hide();
            $('#G1L4EmployeeList').show();
            GetDesignationWiseEmployeeList(org,designation);
        }

        function GetDesignationWiseEmployeeList(organization,designation) {
            var table = $(""#tblG1L4EmployeeList"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [6, 7],
                bInfo: false,
                ajax: {
                    url: appsetting.apiurl+""ap");
                WriteLiteral(@"i/Employees/designation"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization: organization, designation: designation },
                    error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                columns: [
                    {
                        data: ""employeeName"", name: ""Name"", autoWidth: true
                    },
                    {
                        data: ""office"", name: ""Office"", autoWidth: true
                    },
                    {
                        data: ""joiningDate"", name: ""First Joining Date"", autoWidth: true, render: function (data, type, row) {
                            return moment(data).format('DD/MM/YYYY');
                        }
                    },
                    {
                        data: ""joiningDate"", name: ""Service Length"", autoWidth: tr");
                WriteLiteral(@"ue, render: function (data, type, row) {
                            var startDate = moment(data);
                            var endDate = moment();
                            var duration = moment.duration(endDate.diff(startDate));
                            var years = duration.years();
                            var months = duration.months();
                            return years + ' years, ' + months + ' months';
                        }
                    }
                ]
            });

        }
        

    </script>

    <script type=""text/javascript"">
        var chart2;
        //Load Document
        $(document).ready(function () {
            //Employment status of Bangladesh Bank
            //Graph 02 level 01 data loading
            loadEmploymentStatusChart();
        });

        function graphTwoNavigation() {
            if ($('#G2L3DesignationList').is("":visible"")) {
                $('#filledPostVacantPosts').show();
                $('#G2L3D");
                WriteLiteral(@"esignationList').hide();
                $('#G2ChartTitle').text(chartHelper.getChartTitle('G2L2ChartTitle'));
            }
            else if ($('#filledPostVacantPosts').is("":visible"")) {
                $('#btnBack2').hide();
                chart2.destroy();
                loadEmploymentStatusChart();
            }

        }
        function loadEmploymentStatusChart() {
            chartHelper.setChartTitle('G2L1ChartTitle', 'Transactions Amount (Today) by FI');
            $('#G2ChartTitle').text(chartHelper.getChartTitle('G2L1ChartTitle'));

            var filledPostVacantPosts =");
#nullable restore
#line 570 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                  Write(Html.Raw(Json.Serialize(@ViewBag.filledPostVacantPosts)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";           
            var xValues = filledPostVacantPosts.map(o => o.postType);
            var yValues = filledPostVacantPosts.map(v => v.sanctionPosts);
            var y2Values = filledPostVacantPosts.map(a => a.filledPosts);
            var y3Values = filledPostVacantPosts.map(b => b.vacantPosts);

            var barColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Accepted',
                backgroundColor: '#01B8AA',
                data: yValues,
                stack: 'Stack 0'
            };
            var dataSet2 = {
                label: 'Cancelled',
                backgroundColor: '#DD780A',
                data: y2Values,
                stack: 'Stack 0'
            };
            var dataSet3 = {
                label: 'Pending',
                backgroundColor: '#698B69',
                da");
                WriteLiteral(@"ta: y3Values,
                stack: 'Stack 0'
            };

            var chartData2 = chartHelper.data(xValues, dataSet, dataSet2, dataSet3);
            const config = {
                type: 'bar',
                data: chartData2,
                options: {
                    plugins: {
                        tooltip:true,
                        labels: false,                        
                    },
                    responsive: true,                      
                    interaction: {
                    intersect: false,
                    },
                    scales: {
                        xAxes: [{ stacked: true }],
                        yAxes: [{ stacked: true }]
                    }
                }         
            };            
            var ctx = document.getElementById('filledPostVacantPosts').getContext('2d');
            var chart2 = new Chart(ctx,config);
            //chart2 = new Chart(ctx, chartHelper.config('bar',chartData2))");
                WriteLiteral(";\r\n            \r\n");
                WriteLiteral("        }\r\n         //Graph 02 level 02 data pulling\r\n        function OrgWiseEmploymentStatusChart(postType,orgPosts) {           \r\n            fetch(\'");
#nullable restore
#line 638 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+'PowerDivChart/GetOrgWiseEmploymentStatusData?postType=' + postType)
                .then(response => response.json())
                .then(data => loadOrgWiseEmploymentStatusChart(data, orgPosts, postType))
                .catch(error => console.error('Unable to get items.', error));
        }

        //Graph 02 level 02 data lodding
        function loadOrgWiseEmploymentStatusChart(orgWiseEmploymentStatusChartData, orgPosts, postType) {
            $('#btnBack2').show();
            chartHelper.setChartTitle('G2L2ChartTitle', 'Employment Status (' + postType + '-' + orgPosts + ')');
            $('#G2ChartTitle').text(chartHelper.getChartTitle('G2L2ChartTitle'));

            var canvas = document.getElementById(""filledPostVacantPosts"");
            var ctx = canvas.getContext(""2d"");
            var xValues = orgWiseEmploymentStatusChartData.map(o => o.organization);
            var yValues;
            if (orgPosts == 'Sanction Posts') {
                yValues = orgWiseEmploymentSta");
                WriteLiteral(@"tusChartData.map(v => v.sanctionPost);
            }
            else if (orgPosts == 'Filled Posts') {
                yValues = orgWiseEmploymentStatusChartData.map(v => v.filledPost);
            }
            if (orgPosts == 'Vacant Posts') {
                yValues = orgWiseEmploymentStatusChartData.map(v => v.vacantPost);
            }

            var dsColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Posts',
                backgroundColor: '#DD780A',
                data: yValues
            };

            var chartData2 = chartHelper.data(xValues, dataSet);
            chart2 = new Chart(ctx, chartHelper.config('bar', chartData2));
");
                WriteLiteral(@"        }

        function loadDesignationWiseOrgPost(postType,organization) {
            chartHelper.setChartTitle('G2L3ChartTitle', organization + ' - Vacancy Info');
            $('#G2ChartTitle').text(chartHelper.getChartTitle('G2L3ChartTitle'));
            var table = $(""#tblG2L3DesignationList"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [6, 7],
                bInfo: false,
                ajax: {
                    url: appsetting.apiurl + ""api/Employees/designationWiseSancFillVacPosts"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, postType },
                    error: function (xhr, error, code) {
                        console.log(xhr);
          ");
                WriteLiteral(@"              console.log(code);
                    }
                },
                columns: [
                    {
                        data: ""designationTitle"", name: ""Designation"", autoWidth: true
                    },
                    {
                        data: ""sanctionPosts"", name: ""Sanction Posts"", autoWidth: true
                    },
                    {
                        data: ""filledPosts"", name: ""Filled Posts"", autoWidth: true
                    },
                    {
                        data: ""vacantPosts"", name: ""Vacant Posts"", autoWidth: true
                    },
                ]
            });

        }

    </script>

    <script type=""text/javascript"">
        var chart3;
        //Load Document
        $(document).ready(function () {
            //upcommingRetirement
             //Graph 03 level 01 data lodding
            loadUpcommingRetirmentChart();
            

        });

        function loadMain3() {
      ");
                WriteLiteral(@"      if ($('#G3L3UpcommingRetirementEmployeeList').is("":visible"")) {
                $('#upcommingRetirement').show();
                $('#G3L3UpcommingRetirementEmployeeList').hide();
                $('#G3ChartTitle').text(chartHelper.getChartTitle('G3L2ChartTitle'));
            }
            else if ($('#upcommingRetirement').is("":visible"")) {
                $('#btnBack3').hide();
                chart3.destroy();
                loadUpcommingRetirmentChart();
            }

        }
        function loadUpcommingRetirmentChart() {
            chartHelper.setChartTitle('G3L1ChartTitle','Total Registered Users by FI');
            $('#G3ChartTitle').text(chartHelper.getChartTitle('G3L1ChartTitle'));

            var upcommingRetirement =");
#nullable restore
#line 762 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                Write(Html.Raw(Json.Serialize(@ViewBag.upcommingRetirement)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            var canvas = document.getElementById(""upcommingRetirement"");
            var ctx = canvas.getContext(""2d"");
            var xValues = upcommingRetirement.map(o => o.organization);
            var yValues = upcommingRetirement.map(v => v.employee);

            var barColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Users',
                backgroundColor: '#01B8AA',
                data: yValues
            };

            var chartData3 = chartHelper.data(xValues, dataSet);
            chart3 = new Chart(ctx, chartHelper.config('bar',chartData3));
");
                WriteLiteral("        }\r\n        //Graph 03 level 02 data pulling\r\n        function PostWiseUpcommingRetirmentChart(org) {\r\n            fetch(\'");
#nullable restore
#line 799 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+'PowerDivChart/GetOrgPostWiseUpcommingRetirmentData?org=' + org)
                .then(response => response.json())
                .then(data => loadPostWiseUpcommingRetirmentChart(data,org))
                .catch(error => console.error('Unable to get items.', error));
        }

        //Graph 03 level 02 data lodding
        function loadPostWiseUpcommingRetirmentChart(postWiseUpcommingRetirmentChart,org) {
            $('#btnBack3').show();
            chartHelper.setChartTitle('G3L2ChartTitle', org + ' - Upcoming Retirement');
            $('#G3ChartTitle').text(chartHelper.getChartTitle('G3L2ChartTitle'));

            var canvas = document.getElementById(""upcommingRetirement"");
            var ctx = canvas.getContext(""2d"");
            var xValues = postWiseUpcommingRetirmentChart.map(o => o.monthName);
            var yValues = postWiseUpcommingRetirmentChart.map(v => v.count);
            //var dsColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF""");
                WriteLiteral(@", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Employees',
                backgroundColor: ""#DD780A"",
                data: yValues
            };

            var chartData3 = chartHelper.data(xValues, dataSet);
            chart3 = new Chart(ctx, chartHelper.config('bar', chartData3));
");
                WriteLiteral(@"        }

        function GetUpcommingEmployeeListByMonth(organization, monthValue) {
            chartHelper.setChartTitle('G3L3ChartTitle', organization + ' -Employee List');
            $('#G3ChartTitle').text(chartHelper.getChartTitle('G3L3ChartTitle'));

            var table = $(""#tblG3L3UpcommingRetirementEmployeeList"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [4, 5],
                bInfo: false,
                ajax: {
                    url: appsetting.apiurl + ""api/Employees/upcommingRetirementEmployeesByMonth"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, monthValue },
                    error: function (xhr, error, code) {
                     ");
                WriteLiteral(@"   console.log(xhr);
                        console.log(code);
                    }
                },
                columns: [
                    {
                        data: ""name"", name: ""Name"", autoWidth: true
                    },
                    {
                        data: ""designation"", name: ""Designation"", autoWidth: true
                    },
                    {
                        data: ""office"", name: ""Office"", autoWidth: true
                    },
                    {
                        data: ""retirementDate"", name: ""Retirement Date"", autoWidth: true, render: function (data, type, row) {
                            return moment(data).format('DD/MM/YYYY');
                        }
                    }                    
                ]
            });

        }
    </script>

    <script type=""text/javascript"">
        var chart4;
        //Load Document
        $(document).ready(function () {
            //retirementvsNewEmployee
");
                WriteLiteral(@"             //Graph 04 level 01 data loading
            loadRetirementVsNewEmpChart();
        });

        function loadMain4() {
            if ($('#G4L4EmployeeList').is("":visible"")) {
                $('#G4L3DesigWiseEmployeeCountForRetirementVsNew').show();
                $('#G4L4EmployeeList').hide();
                $('#G4ChartTitle').text(chartHelper.getChartTitle('G4L3ChartTitle'));
            }
            else if ($('#G4L3DesigWiseEmployeeCountForRetirementVsNew').is("":visible"")) {
                $('#retirementvsNewEmployee').show();
                $('#G4L3DesigWiseEmployeeCountForRetirementVsNew').hide();
                $('#G4ChartTitle').text(chartHelper.getChartTitle('G4L2ChartTitle'));
            }
            else if ($('#retirementvsNewEmployee').is("":visible"")) {
                chart4.destroy();
                $('#btnBack4').hide();
                loadRetirementVsNewEmpChart();
            }

        }

        function loadRetirementVsNewEmpChart() {
     ");
                WriteLiteral("       chartHelper.setChartTitle(\'G4L1ChartTitle\', \'Current Net Debit Cap/Position by FI\');\r\n            $(\'#G4ChartTitle\').text(chartHelper.getChartTitle(\'G4L1ChartTitle\'));\r\n\r\n            var retirementvsNewEmployee =");
#nullable restore
#line 922 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                    Write(Html.Raw(Json.Serialize(@ViewBag.retirementvsNewEmployee)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
          
            var xValues = retirementvsNewEmployee.map(o => o.organization);
            var yValues = retirementvsNewEmployee.map(a => a.newEmployee);
            var y2Values = retirementvsNewEmployee.map(v => v.retirement);

            var barColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Net Debit Cap',
                backgroundColor: '#01B8AA',
                data: yValues,
                stack: 'Stack 0'
            };
            var dataSet2 = {
                label: 'Net Position',
                backgroundColor: '#DD780A',
                data: y2Values,
                stack: 'Stack 0'
            };
            var chartData4 = chartHelper.data(xValues, dataSet, dataSet2);
            const config = {
                type: 'bar',
                data: chartData4,
                ");
                WriteLiteral(@"options: {
                    plugins: {
                        tooltip:true,
                        labels: false,                        
                    },
                    responsive: true,                      
                    interaction: {
                    intersect: false,
                    },
                    scales: {
                        xAxes: [{ stacked: true }],
                        yAxes: [{ stacked: true }]
                    }
                }         
            };
");
                WriteLiteral(@"            var ctx = document.getElementById('retirementvsNewEmployee').getContext('2d');
            var chart4 = new Chart(ctx,config);
            //chart4 = new Chart(ctx, chartHelper.config('stackbar', chartData4));
            //chart4 = new Chart(ctx, config);
");
                WriteLiteral("        }\r\n        //Graph 04 level 02 data pulling\r\n        function PostWiseRetirementVsNewEmpChart(org) {           \r\n            fetch(\'");
#nullable restore
#line 989 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' +'PowerDivChart/GetOrgWiseRetirementvsNewEmployeeData?org=' + org)
                .then(response => response.json())
                .then(data => loadPostWiseRetirementVsNewEmp(data, org))
                .catch(error => console.error('Unable to get items.', error));
        }

        //Graph 04 level 02 data loding
        function loadPostWiseRetirementVsNewEmp(PostWiseRetirementVsNewEmp, org) {
            $('#btnBack4').show();
            chartHelper.setChartTitle('G4L2ChartTitle', org + ' - Retired vs New Employee Last Year');
            $('#G4ChartTitle').text(chartHelper.getChartTitle('G4L2ChartTitle'));

            var canvas = document.getElementById(""retirementvsNewEmployee"");
            var ctx = canvas.getContext(""2d"");
            var xValues = PostWiseRetirementVsNewEmp.map(o => o.postType);
            var yValues = PostWiseRetirementVsNewEmp.map(v => v.newEmployee);
            var yValues2 = PostWiseRetirementVsNewEmp.map(v => v.retirement);
            //var dsColor");
                WriteLiteral(@"s = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'New Employee',
                backgroundColor: ""#01B8AA"",
                data: yValues
            };
            var dataSet2 = {
                label: 'Retirement',
                backgroundColor: ""#DD780A"",
                data: yValues2
            };


            var chartData4 = chartHelper.data(xValues, dataSet, dataSet2);
            chart4 = new Chart(ctx, chartHelper.config('bar', chartData4));
");
                WriteLiteral(@"        }
        function getDesignationWiseEmpCountForRetirementVsNew(organization, postType,dataType) {
            chartHelper.setChartTitle('G4L3ChartTitle', organization + ' - Designation Summary');
            $('#G4ChartTitle').text(chartHelper.getChartTitle('G4L3ChartTitle'));

            if (dataType == 'New Employee') {
                dataType = 'new'
            }
            else {
                dataType = 'retirement';
            }
            var table = $(""#tblG4L3DesigWiseEmployeeCountForRetirementVsNew"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [4, 5],
                bInfo: false,
                ajax: {
                    url: appsetting.apiurl + ""api/Employees/designationWiseEmpCountForNewOrRetirement""");
                WriteLiteral(@",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, postType, dataType },
                    error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                columns: [                    
                    {
                        data: ""designation"", name: ""Designation"", autoWidth: true,
                        render: function (data, type, row) {
                            return '<a href=""#"" onclick=""javascript:g4l4EmployeeList(\'' + organization + '\',\'' + row['designation'] + '\',\'' + dataType + '\'); return false;"">' + data + '</a>';
                        }
                    },
                    {
                        data: ""count"", name: ""Number of Employee"", autoWidth: true,
                        render: function (data, type, row) {
                            return '<a href=""#"" onclick=""");
                WriteLiteral(@"javascript:g4l4EmployeeList(\'' + organization + '\',\'' + row['designation'] + '\',\'' + dataType + '\'); return false;"">' + data + '</a>';
                        }
                    }                    
                ]
            });

        }
        //Graph 04 level 04 data loading
        function g4l4EmployeeList(org, designation,datatype) {
            chartHelper.setChartTitle('G4L4ChartTitle', designation + '- Employee List');
            $('#G4ChartTitle').text(chartHelper.getChartTitle('G4L4ChartTitle'));
            $('#G4L3DesigWiseEmployeeCountForRetirementVsNew').hide();
            $('#G4L4EmployeeList').show();
            loadG4L4DesignationWiseEmployeeList(org, datatype, designation);
        }
        function loadG4L4DesignationWiseEmployeeList(organization, dataType, designation) {
            var table = $(""#tblG4L4EmployeeList"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                r");
                WriteLiteral(@"esponsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [6, 7],
                bInfo: false,
                ajax: {
                    url: appsetting.apiurl + ""api/Employees/designationWiseEmployeeListForNewOrRetirement"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, designation, dataType },
                    error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                columns: [
                    {
                        data: ""employeeName"", name: ""Name"", autoWidth: true
                    },
                    {
                        data: ""officeName"", name: ""Office"", autoWidth: true
                    },
                    {
                        data: ""joiningDate""");
                WriteLiteral(@", name: ""First Joining Date"", autoWidth: true, render: function (data, type, row) {
                            return moment(data).format('DD/MM/YYYY');
                        }
                    },
                    
                ]
            });

        }

    </script>

    <script type=""text/javascript"">
        var chart5;
        //Load Document
        $(document).ready(function () {
            //foreignTourOrganizationWise
            //Graph 05 level 01 data loading
            loadforeignTourOrgWiseChart();


        });

        function loadMain5() {
            if ($('#G5L3EmployeeListByForeignTourPurpose').is("":visible"")) {
                $('#foreignTourOrganizationWise').show();
                $('#G5L3EmployeeListByForeignTourPurpose').hide();
                $('#G5ChartTitle').text(chartHelper.getChartTitle('G5L2ChartTitle'));
            }
            else if ($('#foreignTourOrganizationWise').is("":visible"")) {
                $('#btnBack5').hide();");
                WriteLiteral(@"
                chart5.destroy();
                //$('#chartTitle5').text('Employee Foreign Tour');                
                loadforeignTourOrgWiseChart();
            }

        }
        function loadforeignTourOrgWiseChart() {
            chartHelper.setChartTitle('G5L1ChartTitle', 'RTP Status by FI');
            $('#G5ChartTitle').text(chartHelper.getChartTitle('G5L1ChartTitle'));

            var foreignTourOrganizationWise =");
#nullable restore
#line 1165 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                        Write(Html.Raw(Json.Serialize(@ViewBag.foreignTourOrganizationWise)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            var canvas = document.getElementById(""foreignTourOrganizationWise"");
            var ctx = canvas.getContext(""2d"");
            var xValues = foreignTourOrganizationWise.map(o => o.organization);
            var yValues = foreignTourOrganizationWise.map(v => v.tourCount);

            var barColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Transactions Amount',
                backgroundColor: '#01B8AA',
                data: yValues
            };

            var chartData5 = chartHelper.data(xValues, dataSet);
            chart5 = new Chart(ctx, chartHelper.config('bar',chartData5));
            //canvas.onclick = function (evt) {
            //    var activePoints5 = chart5.getElementsAtEvent(evt);
            //    console.log(canvas.onclick);
            //    if (activePoints5[0]) {
           ");
                WriteLiteral(@" //        var chartData5 = activePoints5[0]['_chart'].config.data;
            //        var idx = activePoints5[0]['_index'];

            //        var label = chartData5.labels[idx];
            //        var value = chartData5.datasets[0].label[idx];                    
            //        chart5.destroy();                    
            //        ForeignTourOrgWiseChart(label);
            //    }

            //};
        }
         //Graph 05 level 02 data pulling
        function ForeignTourOrgWiseChart(org) {           
            fetch('");
#nullable restore
#line 1197 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+'PowerDivChart/GetForeignTourOfficialData?org=' + org)
                .then(response => response.json())
                .then(data => loadForeignTourOrgWiseChart(data, org))
                .catch(error => console.error('Unable to get items.', error));
        }

        //Graph 05 level 02 data loding
        function loadForeignTourOrgWiseChart(foreignTourOrgWiseChart, org) {
            $('#btnBack5').show();
            chartHelper.setChartTitle('G5L2ChartTitle', org + ' - Foreign Tour (2021)');
            $('#G5ChartTitle').text(chartHelper.getChartTitle('G5L2ChartTitle'));

            var canvas = document.getElementById(""foreignTourOrganizationWise"");
            var ctx = canvas.getContext(""2d"");
            var xValues = foreignTourOrgWiseChart.map(o => o.tourPurpose);
            var yValues = foreignTourOrgWiseChart.map(v => v.totalTour);
            var dsColors = [""#01B8AA"", ""#DD780A"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#");
                WriteLiteral(@"4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Foreign Tour',
                backgroundColor: dsColors,
                data: yValues
            };

            var chartData5 = chartHelper.data(xValues, dataSet);
            chart5 = new Chart(ctx, chartHelper.config('pie', chartData5));
            //canvas.onclick = function (evt) {
            //    var activePoints5 = chart5.getElementsAtEvent(evt);
            //    if (activePoints5[0]) {
            //        var chartData5 = activePoints5[0]['_chart'].config.data;
            //       var idx = activePoints5[0]['_index'];
            //
            //        var label = chartData5.labels[idx];
            //        var value = chartData5.datasets[0].data[idx];

                    
            //        $('#foreignTourOrganizationWise').hide();
            //        $('#G5L3EmployeeListByForeignTourPurpose').show();
            //        getEmployeeListByForei");
                WriteLiteral(@"gnTourPurpose(org,label);
            //    }
            //};
        }
        function getEmployeeListByForeignTourPurpose(organization, purpose) {
            chartHelper.setChartTitle('G5L3ChartTitle', organization + ' - Employee List');
            $('#G5ChartTitle').text(chartHelper.getChartTitle('G5L3ChartTitle'));
            
            var table = $(""#tblG5L3EmployeeListByForeignTourPurpose"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [5, 6],
                bInfo: false,
                ajax: {
                    url: appsetting.apiurl + ""api/Employees/employeeListByForeignTourPurpose"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, purpose },
      ");
                WriteLiteral(@"              error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                drawCallback: function (settings) {
                    // Here the response
                    //var response = settings.json;
                    //console.log(response);
                },
                columns: [
                    {
                        data: ""employeeName"", name: ""Employee Name"", autoWidth: true
                    },
                    {
                        data: ""fromDate"", name: ""From Date"", autoWidth: true, render: function (data, type, row) {
                            return moment(data).format('DD/MM/YYYY');
                        }
                    },
                    {
                        data: ""toDate"", name: ""To Date"", autoWidth: true, render: function (data, type, row) {
                            return moment(data).format('DD/MM/YYYY');
");
                WriteLiteral(@"                        }
                    },
                    {
                        data: ""countryName"", name: ""Country Visited"", autoWidth: true
                    }
                    ,
                    {
                        data: ""go"", name: ""GO"", autoWidth: true
                    }
                ]
            });

        }

    </script>

    <script type=""text/javascript"">
        var chart6;
        var chart61;
        //Load Document
        $(document).ready(function () {
            //netSalaryByMonth
           //Graph 06 level 01 data loading
            loadnetSalaryByMonthChart();

        });

        function loadMain6() {            
            if ($('#G6L4GradeWiseMonthlySalarySummary').is("":visible"")) {
                $('#G6L3MonthlySalarySummary').show();
                $('#G6L4GradeWiseMonthlySalarySummary').hide();
                $('#G6ChartTitle').text(chartHelper.getChartTitle('G6L3ChartTitle'));
            }
            el");
                WriteLiteral(@"se if ($('#G6L3MonthlySalarySummary').is("":visible"")) {
                $('#netSalaryByMonth').show();
                $('#G6L3MonthlySalarySummary').hide();
                $('#G6ChartTitle').text(chartHelper.getChartTitle('G6L2ChartTitle'));
            }
            else if ($('#netSalaryByMonth').is("":visible"")) {
                $('#btnBack6').hide();
                chart6.destroy();                
                loadnetSalaryByMonthChart();
            }

        }
        function loadnetSalaryByMonthChart() {
            chartHelper.setChartTitle('G6L1ChartTitle', 'Transaction Amount by Settlement Cycle');
            $('#G6ChartTitle').text(chartHelper.getChartTitle('G6L1ChartTitle'));

            var netSalaryByMonth =");
#nullable restore
#line 1329 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                             Write(Html.Raw(Json.Serialize(@ViewBag.netSalaryByMonth)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            var canvas = document.getElementById(""netSalaryByMonth"");
            var ctx = canvas.getContext(""2d"");
            var xValues = netSalaryByMonth.map(o => o.salaryDate);
            var yValues = netSalaryByMonth.map(v => v.totalSalary);

            var barColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Transaction Amount',
                backgroundColor: '#01B8AA',
                data: yValues
            };

            var chartData6 = chartHelper.data(xValues, dataSet);
            chart6 = new Chart(ctx, chartHelper.config('bar',chartData6));
            
            //canvas.onclick = function (evt) {
            //    var activePoints6 = chart6.getElementsAtEvent(evt);
            //    console.log(canvas.onclick);
            //    if (activePoints6[0]) {
            //        var chart");
                WriteLiteral(@"Data6 = activePoints6[0]['_chart'].config.data;
            //        var idx = activePoints6[0]['_index'];

            //        var label = chartData6.labels[idx];
            //        var value = chartData6.datasets[0].label[idx];
            //        chart6.destroy();                    
            //       NetSalaryByMonthChart(label);
            //    }

           // };
        }
          //Graph 06 level 02 data pulling
        function NetSalaryByMonthChart(salaryDate) {            
            //$('#chartTitle6').text(salaryDate + ' - Salary');
            fetch('");
#nullable restore
#line 1363 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+'PowerDivChart/GetNetSalaryByMonthData?salaryDate=' + salaryDate)
                .then(response => response.json())
                .then(data => loadNetSalaryByMonthChart(data, salaryDate))
                .catch(error => console.error('Unable to get items.', error));
        }

         //Graph 06 level 02 data loading
        function loadNetSalaryByMonthChart(netSalaryByMonthChart, salaryDate) {
            $('#btnBack6').show();
            chartHelper.setChartTitle('G6L2ChartTitle', salaryDate + ' - Salary');
            $('#G6ChartTitle').text(chartHelper.getChartTitle('G6L2ChartTitle'));

            var canvas = document.getElementById(""netSalaryByMonth"");
            var ctx = canvas.getContext(""2d"");
            var xValues = netSalaryByMonthChart.map(o => o.organization);
            var yValues = netSalaryByMonthChart.map(v => v.totalSalary);
            //var dsColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A");
                WriteLiteral(@""", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Total Salary',
                backgroundColor: ""#DD780A"",
                data: yValues
            };

            var chartData6 = chartHelper.data(xValues, dataSet);
            chart6 = new Chart(ctx, chartHelper.config('bar', chartData6));
            canvas.onclick = function (evt) {
                var activePoints6 = chart6.getElementsAtEvent(evt);
                if (activePoints6[0]) {
                    var chartData6 = activePoints6[0]['_chart'].config.data;
                    var idx = activePoints6[0]['_index'];

                    var label = chartData6.labels[idx];
                    var value = chartData6.datasets[0].data[idx];
                    
                    $('#netSalaryByMonth').hide();
                    $('#G6L3MonthlySalarySummary').show();
                    getMonthlySalaryData(label, salaryDate);
                }
            };
       ");
                WriteLiteral(@" }

        //Graph 06 level 03 data pulling
        function getMonthlySalaryData(org,salaryDate) {            
            //$('#chartTitle6').text(org + ' Salary - ' + salaryDate);
            let url = appsetting.apiurl + 'api/Employees/monthlySalarySummary?organization=' + org + '&salaryDate=' + salaryDate;
            fetch(url)
                .then(response => response.json())
                .then(data => loadMonthSummaryChart(data, org, salaryDate))
                .catch(error => console.error('Unable to get items.', error));
        }
        function loadMonthSummaryChart(salaryData, org, salaryDate) {
            $('#btnBack6').show();
            chartHelper.setChartTitle('G6L3ChartTitle', org + ' Salary - ' + salaryDate);
            $('#G6ChartTitle').text(chartHelper.getChartTitle('G6L3ChartTitle'));

            var canvas = document.getElementById(""monthlySalarySummary"");
            var ctx = canvas.getContext(""2d"");
            var xValues = salaryData.map(o => o.partic");
                WriteLiteral(@"ulars);
            var yValues = salaryData.map(v => v.totalAmount);
            var dsColors = [""#01B8AA"",""#DD780A"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Total Salary',
                backgroundColor: dsColors,
                data: yValues
            };

            var chartData61 = chartHelper.data(xValues, dataSet);
            chart61 = new Chart(ctx, chartHelper.config('polarArea', chartData61));
            canvas.onclick = function (evt) {
                var activePoints61 = chart61.getElementsAtEvent(evt);
                if (activePoints61[0]) {
                    var chartData61 = activePoints61[0]['_chart'].config.data;
                    var idx = activePoints61[0]['_index'];

                    var label = chartData61.labels[idx];
                    var value = chartData61.datasets[0].data[idx];

              ");
                WriteLiteral(@"      $('#G6L3MonthlySalarySummary').hide();
                    $('#G6L4GradeWiseMonthlySalarySummary').show();
                    getGradeWiswMonthlySalaryData(org, salaryDate, label);
                }
            };
        }

        function getGradeWiswMonthlySalaryData(organization, salaryDate, amountType) {
            chartHelper.setChartTitle('G6L4ChartTitle', organization + ' Salary - ' + salaryDate + ' (' + amountType + ')');
            $('#G6ChartTitle').text(chartHelper.getChartTitle('G6L4ChartTitle'));
            
            var table = $(""#tblG6L4GradeWiseMonthlySalarySummary"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [5, 6],
                bInfo: false,
                ajax: {
                    url: apps");
                WriteLiteral(@"etting.apiurl + ""api/Employees/gradeWiseMonthlySalarySummary"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, salaryDate, amountType },
                    error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                drawCallback: function (settings) {
                    // Here the response
                    //var response = settings.json;
                    //console.log(response);
                },
                columns: [
                    {
                        data: ""gradeName"", name: ""Grade"", autoWidth: true
                    },                    
                    {
                        data: ""amount"", name: ""Amount"", autoWidth: true, render: function (data, type, row) {
                            return data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "","")+' BDT';
             ");
                WriteLiteral(@"           }
                    }
                ]
            });

        }

    </script>

    <script type=""text/javascript"">
        var chart7;
        //Load Document
        $(document).ready(function () {
            //employeeJobStatusPieChart
            //Graph 07 level 01 data loading
            loademployeeJobStatusPieChart();
        });

        function loadMain7() {
            if ($('#G7L4EmployeeList').is("":visible"")) {
                $('#G7L3DesignationWiseEmployeeCount').show();
                $('#G7L4EmployeeList').hide();
                $('#G7ChartTitle').text(chartHelper.getChartTitle('G7L3ChartTitle'));
            }
           else if ($('#G7L3DesignationWiseEmployeeCount').is("":visible"")) {
                $('#employeeJobStatusPieChart').show();
                $('#G7L3DesignationWiseEmployeeCount').hide();
                $('#G7ChartTitle').text(chartHelper.getChartTitle('G7L2ChartTitle'));
            }
            else if ($('#employeeJobStatus");
                WriteLiteral(@"PieChart').is("":visible"")) {
                $('#btnBack7').hide();
                chart7.destroy();
                loademployeeJobStatusPieChart();
            }            
        }
        function loademployeeJobStatusPieChart() {
            chartHelper.setChartTitle('G7L1ChartTitle', 'Current Transactions Settled vs Unsettled');
            $('#G7ChartTitle').text(chartHelper.getChartTitle('G7L1ChartTitle'));

            var employeeJobStatusPieChart =");
#nullable restore
#line 1523 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                      Write(Html.Raw(Json.Serialize(@ViewBag.employeeJobStatusPieChart)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            var canvas = document.getElementById(""employeeJobStatusPieChart"");
            var ctx = canvas.getContext(""2d"");
            var xValues = employeeJobStatusPieChart.map(o => o.jobStatus);
            var yValues = employeeJobStatusPieChart.map(v => v.totalEmployee);

            var barColors = [""#01B8AA"",""#DD780A"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Transactions',
                backgroundColor: barColors,
                data: yValues
            };

            var chartData7 = chartHelper.data(xValues, dataSet);
            chart7 = new Chart(ctx, chartHelper.config('pie',chartData7));
");
                WriteLiteral("        }\r\n        //Graph 07 level 02 data pulling\r\n        function EmployeeJobStatusPieChart(jobStatus) {\r\n            fetch(\'");
#nullable restore
#line 1560 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+'PowerDivChart/GetOrgWiseEmpByJobStatusData?jobStatus=' + jobStatus)
                .then(response => response.json())
                .then(data => loadOrgWiseEmpByJobStatusChart(data, jobStatus))
                .catch(error => console.error('Unable to get items.', error));
        }

        //Graph 07 level 02 data loading
        function loadOrgWiseEmpByJobStatusChart(orgWiseEmpByJobStatus, jobStatus) {
            $('#btnBack7').show();
            chartHelper.setChartTitle('G7L2ChartTitle', jobStatus + ' - Employees');
            $('#G7ChartTitle').text(chartHelper.getChartTitle('G7L2ChartTitle'));

            var canvas = document.getElementById(""employeeJobStatusPieChart"");
            var ctx = canvas.getContext(""2d"");
            var xValues = orgWiseEmpByJobStatus.map(o => o.organization);
            var yValues = orgWiseEmpByJobStatus.map(v => v.totalEmp);
            //var dsColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", """);
                WriteLiteral(@"#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Employees',
                backgroundColor: ""#DD780A"",
                data: yValues
            };

            var chartData7 = chartHelper.data(xValues, dataSet);
            chart7 = new Chart(ctx, chartHelper.config('bar', chartData7));
            canvas.onclick = function (evt) {
                var activePoints7 = chart7.getElementsAtEvent(evt);
                if (activePoints7[0]) {
                    var chartData7 = activePoints7[0]['_chart'].config.data;
                    var idx = activePoints7[0]['_index'];

                    var label = chartData7.labels[idx];
                    var value = chartData7.datasets[0].data[idx];

                    //var url = ""http://example.com/?label="" + label + ""&value="" + value;
                    //console.log(url);
                    //alert(url);
                    getDesignationWiseEmpByJ");
                WriteLiteral(@"obType(label, jobStatus);
                    //$('#searchBox3').show();
                    $('#employeeJobStatusPieChart').hide();
                    $('#G7L3DesignationWiseEmployeeCount').show();
                }
            };
        }

        ////Graph 07 level 03 data pulling
        function getDesignationWiseEmpByJobType(organization, jobStatus) {
            chartHelper.setChartTitle('G7L3ChartTitle', organization + ' - Designation Summary');
            $('#G7ChartTitle').text(chartHelper.getChartTitle('G7L3ChartTitle'));
            var table = $(""#tblG7L3DesignationWiseEmployeeCount"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [6, 7],
                bInfo: false,
                ajax: {
                    url: '");
#nullable restore
#line 1621 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                     Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' +""PowerDivChart/GetDesignationWiseEmpByJobTypeAndOrgData"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, jobStatus },
                    error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                columns: [
                    {
                        data: ""designation"", name: ""Designation"", autoWidth: true,
                        render: function (data, type, row) {
                            return '<a href=""#"" onclick=""javascript:g7l4EmployeeList(\'' + organization + '\',\'' + row['designation'] + '\'); return false;"">' + data + '</a>';
                        }
                    },
                    {
                        data: ""totalEmp"", name: ""Number of Employee"", autoWidth: true,
                        render: function (data, type, row) {
                            return '<a href=""");
                WriteLiteral(@"#"" onclick=""javascript:g7l4EmployeeList(\'' + organization + '\',\'' + row['designation'] + '\'); return false;"">' + data + '</a>';
                        }
                    }
                ]
            });

        }

        //Graph 01 level 04 data loading
        function g7l4EmployeeList(org, designation) {
            chartHelper.setChartTitle('G7L4ChartTitle', designation + '- Employee List');
            $('#G7ChartTitle').text(chartHelper.getChartTitle('G7L4ChartTitle'));
            $('#G7L3DesignationWiseEmployeeCount').hide();
            $('#G7L4EmployeeList').show();
            loadG7L4DesignationWiseEmployeeList(org, designation);
        }

        function loadG7L4DesignationWiseEmployeeList(organization, designation) {
            var table = $(""#tblG7L4EmployeeList"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
             ");
                WriteLiteral(@"   paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [6, 7],
                bInfo: false,
                ajax: {
                    url: appsetting.apiurl + ""api/Employees/designation"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization: organization, designation: designation },
                    error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                columns: [
                    {
                        data: ""employeeName"", name: ""Name"", autoWidth: true
                    },
                    {
                        data: ""office"", name: ""Office"", autoWidth: true
                    },
                    {
                        data: ""joiningDate"", name: ""First Joining Date"", autoWidth: true, render: function (data, type, row) {
  ");
                WriteLiteral(@"                          return moment(data).format('DD/MM/YYYY');
                        }
                    },
                    {
                        data: ""joiningDate"", name: ""Service Length"", autoWidth: true, render: function (data, type, row) {
                            var startDate = moment(data);
                            var endDate = moment();
                            var duration = moment.duration(endDate.diff(startDate));
                            var years = duration.years();
                            var months = duration.months();
                            return years + ' years, ' + months + ' months';
                        }
                    }
                ]
            });

        }
    </script>

    <script type=""text/javascript"">
        var chart8;
        //Load Document
        $(document).ready(function () {
            //employeeQualifcationPieChart
             //Graph 08 level 01 data loading
            loademployeeQualifi");
                WriteLiteral(@"cationPieChart();


        });

        function loadMain8() {
            if ($('#G8L3DesignationWiseEmployeeCount').is("":visible"")) {
                $('#employeeQualifcationPieChart').show();
                $('#G8L3DesignationWiseEmployeeCount').hide();
                $('#G8ChartTitle').text(chartHelper.getChartTitle('G8L2ChartTitle'));
            }
            else if ($('#employeeJobStatusPieChart').is("":visible"")) {
                $('#btnBack8').hide();
                chart8.destroy();                
                loademployeeQualificationPieChart();
            }
            
        }
        function loademployeeQualificationPieChart() {
            chartHelper.setChartTitle('G8L1ChartTitle', 'Transaction Count by Type');
            $('#G8ChartTitle').text(chartHelper.getChartTitle('G8L1ChartTitle'));

            var employeeQualifcationPieChart =");
#nullable restore
#line 1735 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                                         Write(Html.Raw(Json.Serialize(@ViewBag.employeeQualifcationPieChart)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            var canvas = document.getElementById(""employeeQualifcationPieChart"");
            var ctx = canvas.getContext(""2d"");
            var xValues = employeeQualifcationPieChart.map(o => o.qualification);
            var yValues = employeeQualifcationPieChart.map(v => v.total);

            var barColors = [""#01B8AA"",""#DD780A"", ""#698B69"", ""#008080"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Transactions',
                backgroundColor: barColors,
                data: yValues
            };

            var chartData8 = chartHelper.data(xValues, dataSet);
            chart8 = new Chart(ctx, chartHelper.config('pie',chartData8));
");
                WriteLiteral("        }\r\n        //Graph 08 level 02 data pulling\r\n        function EmployeeQualificationPieChart(qualificaion) {\r\n            fetch(\'");
#nullable restore
#line 1772 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'+'PowerDivChart/GetOrgWiseEmpByQualificationData?qualificaion=' + qualificaion)
                .then(response => response.json())
                .then(data => loadOrgWiseEmpByQualificationChart(data, qualificaion))
                .catch(error => console.error('Unable to get items.', error));
        }

        //Graph 08 level 02 data loading
        function loadOrgWiseEmpByQualificationChart(orgWiseEmpByQualification, qualificaion) {
            $('#btnBack8').show();
            chartHelper.setChartTitle('G8L2ChartTitle', qualificaion + ' - Qualified Employees');
            $('#G8ChartTitle').text(chartHelper.getChartTitle('G8L2ChartTitle'));

            var canvas = document.getElementById(""employeeQualifcationPieChart"");
            var ctx = canvas.getContext(""2d"");
            var xValues = orgWiseEmpByQualification.map(o => o.organization);
            var yValues = orgWiseEmpByQualification.map(v => v.total);
            //var dsColors = [""#FE9666"", ""#01B8AA"", ""#698B69"", ""#00808");
                WriteLiteral(@"0"", ""#007EB9"", ""#5F6B6D"", ""#DFBFBF"", ""#660000"", ""#FFDEAD"", ""#9AFF9A"", ""#4F8E83"", ""#62B1F6"", ""#990099"", ""#9D6B84"", ""#551011""];
            var dataSet = {
                label: 'Number of Employees',
                backgroundColor: ""#DD780A"",
                data: yValues
            };

            var chartData8 = chartHelper.data(xValues, dataSet);
            chart8 = new Chart(ctx, chartHelper.config('bar', chartData8));
            canvas.onclick = function (evt) {
                var activePoints8 = chart8.getElementsAtEvent(evt);
                if (activePoints8[0]) {
                    var chartData8 = activePoints8[0]['_chart'].config.data;
                    var idx = activePoints8[0]['_index'];

                    var label = chartData8.labels[idx];
                    var value = chartData8.datasets[0].data[idx];

                    //var url = ""http://example.com/?label="" + label + ""&value="" + value;
                    //console.log(url);
                    //alert(ur");
                WriteLiteral(@"l);
                    getDesignationWiseEmpByQualification(label, qualificaion);
                    //$('#searchBox3').show();
                    $('#employeeQualifcationPieChart').hide();
                    $('#G8L3DesignationWiseEmployeeCount').show();
                }
            };
        }
        ////Graph 08 level 03 data pulling
        function getDesignationWiseEmpByQualification(organization, qualification) {
            chartHelper.setChartTitle('G8L3ChartTitle', organization + ' - Designation Summary');
            $('#G8ChartTitle').text(chartHelper.getChartTitle('G8L3ChartTitle'));
            var table = $(""#tblG8L3DesignationWiseEmployeeCount"").DataTable({
                bDestroy: true,
                lengthChange: false,
                ordering: false,
                responsive: true,
                processing: true,
                paging: true,
                serverSide: true,
                filter: true,
                lengthMenu: [6, 7],
             ");
                WriteLiteral("   bInfo: false,\r\n                ajax: {\r\n                    url: \'");
#nullable restore
#line 1832 "C:\Software\IDTPDashboard\IDTPDashboard.Web\Views\IDTPChart\IDTPDashboard1.cshtml"
                     Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' +""PowerDivChart/GetDesignationWiseEmpByQualificationAndOrgData"",
                    type: ""POST"",
                    datatype: ""json"",
                    data: { organization, qualification },
                    error: function (xhr, error, code) {
                        console.log(xhr);
                        console.log(code);
                    }
                },
                columns: [
                    {
                        data: ""designation"", name: ""Designation"", autoWidth: true
                    },
                    {
                        data: ""totalEmp"", name: ""Number of Employee"", autoWidth:true
                    }
                ]
            });

        }

    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
